# Copyright 2021 Proofcraft Pty Ltd
#
# SPDX-License-Identifier: BSD-2-Clause

name: Proofs

on:
  pull_request_target:
    types: [labeled, synchronize]

# To reduce the load (especiually on the AWS instances) we cancel any older runs
# of this workflow for the current PR. Such runs exist, if there were new pushes
# to the PR's branch without waiting for the workflow to finish. As a side
# effect, pushing new commits now becomes a convenient way to cancel all the
# older runs, e.g. if they are stuck and would only be stopped by the timeout
# eventually.
# Note that we could do the concurrency handling at a finer level and wrap just
# the actual runs on the AWS instances. But there is no gain in this level of
# detail. This might change if additional jobs or steps are added here.
concurrency:
  group: ${{ github.workflow }}-pr-${{ github.event.number }}
  cancel-in-progress: true

jobs:
  cproof:
    name: C Proofs
    runs-on: ubuntu-latest
    # run on any normal trigger when the label exists, and run when the label is added
    # don't run again when other labels are added
    if: ${{ github.repository_owner == 'seL4' &&
            (github.event.action != 'labeled' &&
               contains(github.event.pull_request.labels.*.name, 'proof-test') ||
             github.event.action == 'labeled' && github.event.label.name == 'proof-test') }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: ARM
            session: CRefine SimplExportAndRefine
          - arch: ARM_HYP
            session: CRefine
          - arch: RISCV64
            session: CRefine SimplExportAndRefine
          - arch: X64
            session: CRefine
          - arch: RISCV64
            features: MCS
            session: CRefine
    steps:
    - name: Proofs
      uses: seL4/ci-actions/aws-proofs@master
      with:
        L4V_ARCH: ${{ matrix.arch }}
        L4V_FEATURES: ${{ matrix.features }}
        isa_branch: ts-2023
        session: ${{ matrix.session }}
        manifest: ${{ matrix.features == 'MCS' && 'mcs.xml' || 'default.xml' }}
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_SSH: ${{ secrets.AWS_SSH }}
        GH_HEAD_SHA: ${{ github.event.pull_request.head.sha }}
    - name: Upload kernel builds
      uses: actions/upload-artifact@v4
      with:
        name: kernel-builds-${{ matrix.arch }}-${{ matrix.features }}
        path: artifacts/kernel-builds
        if-no-files-found: ignore
    - name: Upload logs
      uses: actions/upload-artifact@v4
      with:
        name: logs-${{ matrix.arch }}-${{ matrix.features }}
        path: logs.tar.xz
