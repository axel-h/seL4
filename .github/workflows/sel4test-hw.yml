# Copyright 2021, Proofcraft Pty Ltd
#
# SPDX-License-Identifier: BSD-2-Clause

# sel4test hardware builds and runs
#
# See sel4test-hw/builds.yml in the repo seL4/ci-actions for configs.

name: seL4Test-HW

on:
  # needs PR target for secrets access; guard by requiring label
  pull_request_target:
    ##### DUMMY
    types: [opened, reopened, synchronize, labeled]

# downgrade permissions to read-only as you would have in a standard PR action
permissions:
  contents: read

# To reduce the load (especiually on the machine queue) we cancel any older runs
# of this workflow for the current PR. Such runs exist, if there were new pushes
# to the PR's branch without waiting for the workflow to finish. As a side
# effect, pushing new commits now becomes a convenient way to cancel all the
# older runs, e.g. if they are stuck and would only be stopped by the timeout
# eventually.
# Note that we could do the concurrency handling at a finer level, and only wrap
# the actual run on the hardware. But there seems not much gain in letting the
# older builds run, as these are usually obsolete with new pushes also.
concurrency:
  group: ${{ github.workflow }}-pr-${{ github.event.number }}
  cancel-in-progress: true

jobs:
  create_matrix:
    name: Create Matrix
    runs-on: ubuntu-latest
    outputs:
      matrix_build: ${{ steps.matrix.outputs.matrix_build }}
      matrix: ${{ steps.matrix.outputs.matrix }}
    steps:
    - id: matrix
      uses: axel-h/ci-actions/sel4test-hw-matrix@patch-axel-1
    - env:
        json_steps_matrix: ${{ toJSON(steps.matrix) }}
        json_steps_matrix_outputs_matrix_build: ${{ toJSON(steps.matrix.outputs.matrix_build) }}
        json_steps_matrix_outputs_matrix: ${{ toJSON(steps.matrix.outputs.matrix) }}
      run: |
        echo steps.matrix = ${json_steps_matrix}
        echo steps.matrix.outputs.matrix = ${json_steps_matrix_outputs_matrix}
        echo steps.matrix.outputs.matrix_build = ${json_steps_matrix_outputs_matrix}

  hw-build:
    name: HW Build
    runs-on: ubuntu-latest
    needs: create_matrix
    if: ${{ github.event_name == 'push' ||
            github.event_name == 'pull_request_target' &&
              github.event.action != 'labeled' &&
              (contains(github.event.pull_request.labels.*.name, 'hw-build') ||
               contains(github.event.pull_request.labels.*.name, 'hw-test')) ||
            github.event_name == 'pull_request_target' &&
              github.event.action == 'labeled' &&
              (github.event.label.name == 'hw-build' ||
               github.event.label.name == 'hw-test') }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.create_matrix.outputs.matrix_build) }}
    steps:
    - name: Build
      uses: axel-h/ci-actions/sel4test-hw@patch-axel-1
      with:
        march: ${{ matrix.march }}
        compiler: ${{ matrix.compiler }}
        sha: ${{ github.event.pull_request.head.sha }}
    - name: Upload images
      uses: actions/upload-artifact@v4
      with:
        name: images-${{ matrix.platform }}-${{ matrix.compiler }}-${{ matrix.mode }}
        path: '*-images.tar.gz'
    - name: Upload kernel.elf files
      uses: actions/upload-artifact@v4
      with:
        name: kernel.elf-${{ matrix.platform }}-${{ matrix.compiler }}-${{ matrix.mode }}
        path: '*-kernel.elf'

  hw-run:
    name: HW Run
    runs-on: ubuntu-latest
    needs: [create_matrix, hw-build]
    if: ${{ (github.event_name == 'push' ||
             github.event_name == 'pull_request_target' &&
               github.event.action != 'labeled' &&
               contains(github.event.pull_request.labels.*.name, 'hw-test') ||
             github.event_name == 'pull_request_target' &&
               github.event.action == 'labeled' &&
               github.event.label.name == 'hw-test') }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.create_matrix.outputs.matrix) }}
    steps:
      - name: Download image
        uses: actions/download-artifact@v4
        with:
          name: images-${{ matrix.platform }}-${{ matrix.compiler }}-${{ matrix.mode }}
      - name: Run
        uses: axel-h/ci-actions/sel4test-hw-run@patch-axel-1
        with:
          platform: ${{ matrix.platform }}
          compiler: ${{ matrix.compiler }}
          mode: ${{ matrix.mode }}
          index: $${{ strategy.job-index }}
        env:
          HW_SSH: ${{ secrets.HW_SSH }}
